image: docker:19.03.8

variables:
  DOCKER_HOST: tcp://docker:2375
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""

services:
  - postgres
  - docker:19.03.8-dind

stages:
  - build
  - deploy

maven-build:
  image: maven:3-jdk-11
  stage: build
  script: "mvn package -B"
  artifacts:
    paths:
      - target/flat-sharing.war

deploy-dev:
  rules:
    - if: '$CI_COMMIT_BRANCH =~ /^main$/'
  before_script:
    - which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan $DEV_HOST >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  stage: deploy
  script:
    # - ssh $DEV_USER@$DEV_HOST "sudo rm -rf /opt/tomcat/webapps/*"
    - scp target/flat-sharing.war $DEV_USER@$DEV_HOST:$DEV_APP_PATH/
    - ssh $DEV_USER@$DEV_HOST "[ ! -f $DEV_APP_PATH/renta.war ] || mv $DEV_APP_PATH/flat-sharing.war $DEV_APP_PATH/renta.war"
    - ssh $DEV_USER@$DEV_HOST "service tomcat restart"
    # - ssh $DEV_USER@$DEV_HOST "sudo systemctl stop app_name_service && sudo systemctl start app_name_service"
